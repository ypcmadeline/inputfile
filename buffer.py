# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'parameter.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from functools import partial

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QButtonGroup

import new_input_file
import constPara, varyPara
from add import *
import status
import property

class parameter(object):

    def __init__(self, const, vary):
        self.const = const
        self.vary = vary
        self.constPara = []
        self.varyPara = []
        self.pp = []
        for i in range (vary):
            self.pp.append(property.property())

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 700)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 30, 171, 16))
        self.label.setText("Parameter Setting")
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(40, 80, 600, 600))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")

        # list for vary paramter label
        self.name = []
        self.combo = []
        self.range = []
        self.rfield = []
        self.check = []
        self.add = []
        self.diduadd = []
        self.status = []


        # list for const paramter label
        self.cname = []
        self.ccombo = []
        self.cvalue = []
        self.crfield = []
        self.cadd = []

        self.btn_grp = QButtonGroup()
        self.btn_grp.buttonClicked[int].connect(self.addSession)



        for i in range(self.vary):

            self.name.append(QtWidgets.QLabel(self.gridLayoutWidget))
            self.name[i].setText("Varying paramter" + str(i + 1))
            self.gridLayout.addWidget(self.name[i], i, 0, 1, 1)
            self.name[i].adjustSize()

            self.combo.append(QtWidgets.QComboBox(self.gridLayoutWidget))
            self.combo[i].setObjectName("comboBox")
            self.combo[i].addItem("Keithley 2440 cur (A)")
            self.combo[i].addItem("Keithley 6221 amp (A)")
            self.combo[i].addItem("Keithley 6221 fre (Hz)")
            self.combo[i].addItem("Angle")
            self.combo[i].addItem("MFLI - x")
            self.combo[i].addItem("MFLI - y")
            self.gridLayout.addWidget(self.combo[i], i, 1, 1, 1)
            self.combo[i].adjustSize()
            self.pp[i].savename = "Keithley 2440 cur (A)"
            self.combo[i].currentTextChanged.connect(partial(self.savename,i))

            self.range.append(QtWidgets.QLabel(self.gridLayoutWidget))
            self.range[i].setText("Range")
            self.gridLayout.addWidget(self.range[i], i, 2, 1, 1)
            self.range[i].adjustSize()

            self.rfield.append(QtWidgets.QLineEdit(self.gridLayoutWidget))
            self.rfield[i].setText("0,0,0")
            self.gridLayout.addWidget(self.rfield[i], i, 3, 1, 1)
            # save range property whenever text changed
            self.rfield[i].textChanged.connect(partial(self.saverfield,i))

            self.check.append(QtWidgets.QCheckBox(self.gridLayoutWidget))
            self.check[i].setText("sweep")
            self.gridLayout.addWidget(self.check[i], i, 4, 1, 1)

            self.check[i].clicked.connect(partial(self.savescheck,i))


            self.add.append(QtWidgets.QPushButton(self.gridLayoutWidget))
            self.add[i].setText("Add")
            self.add[i].setObjectName(str(i))
            self.gridLayout.addWidget(self.add[i], i, 5, 1, 1)
            self.btn_grp.addButton(self.add[i], i)
            noadd = False
            self.diduadd.append(noadd)

            self.status.append(status.Status(self.combo[i].currentText()))

        for i in range(self.const):

            self.cname.append(QtWidgets.QLabel(self.gridLayoutWidget))
            self.cname[i].setText("Constant paramter" + str(i + 1))
            self.gridLayout.addWidget(self.cname[i], i+self.vary, 0, 1, 1)
            self.cname[i].adjustSize()

            self.ccombo.append(QtWidgets.QComboBox(self.gridLayoutWidget))
            self.ccombo[i].setObjectName("comboBox")
            self.ccombo[i].addItem("Keithley 2440 cur (A)")
            self.ccombo[i].addItem("Keithley 6221 amp (A)")
            self.ccombo[i].addItem("Keithley 6221 fre (Hz)")
            self.ccombo[i].addItem("Angle")
            self.ccombo[i].addItem("MFLI - x")
            self.ccombo[i].addItem("MFLI - y")
            self.gridLayout.addWidget(self.ccombo[i], i+self.vary, 1, 1, 1)
            self.ccombo[i].adjustSize()

            self.cvalue.append(QtWidgets.QLabel(self.gridLayoutWidget))
            self.cvalue[i].setText("Constant Value")
            self.gridLayout.addWidget(self.cvalue[i], i+self.vary, 2, 1, 1)
            self.cvalue[i].adjustSize()

            self.crfield.append(QtWidgets.QLineEdit(self.gridLayoutWidget))
            self.crfield[i].setText("const value")
            self.gridLayout.addWidget(self.crfield[i], i+self.vary, 3, 1, 1)


        self.genBtn = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.genBtn.setText("Generate")
        self.gridLayout.addWidget(self.genBtn, i + self.vary+1, 4, 1, 1)
        self.genBtn.clicked.connect(lambda: self.generate_handler())


        print(self.diduadd)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 422, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)


        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def generate_handler(self):
        # varying
        for i in range(self.vary):
            if self.diduadd[i]:
                #yes i did add
                print(self.status[i].range)
                self.varyPara.append(varyPara.VaryPara(self.status[i].name, self.status[i].range, self.status[i].sweep))
            else:
                #nah
                list = self.pp[i].saverange
                slist = self.pp[i].savesweep
                name = self.pp[i].savename
                self.varyPara.append(varyPara.VaryPara(name, list, slist))
                # self.varyPara.append(varyPara.VaryPara(self.combo[i].currentText(), list, slist))

        # const
        for i in range(self.const):
            self.constPara.append(constPara.ConstPara(self.ccombo[i].currentText(), self.crfield[i].text()))

        file = new_input_file.inputFile(self.varyPara, self.constPara)

    def saverfield(self, i, text):
        text = [text]
        t = self.pp[i].saverange
        t[0] = text
        # self.pp[i].saverange = text
        print(self.pp[i].saverange)

    def savescheck(self, i, text):
        text = [text]
        self.pp[i].savesweep = text

    def savename(self,i, text):
        self.pp[i].savename = text
        print(self.pp[i].savename)

    def addSession(self, button_id):
        for btn in self.btn_grp.buttons():
            if btn is self.btn_grp.button(button_id):
                self.diduadd[button_id] = True
                #update status
                # self.status[button_id].setName(self.combo[button_id].currentText())
                # list = [self.rfield[button_id].text()]
                # self.status[button_id].addRange(list)
                # self.status[button_id].addSweep(self.check[button_id].isChecked())
                # self.openwindow(self.status[button_id])
                self.openwindow(self.pp[button_id])
                print("h")

    def openwindow(self, status):
        self.window = QtWidgets.QMainWindow()
        self.ui = add(status)
        self.ui.setupUi(self.window)
        self.window.show()







if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    setParameter = QtWidgets.QMainWindow()
    ui = parameter(3,2)
    ui.setupUi(setParameter)
    setParameter.show()
    sys.exit(app.exec_())
